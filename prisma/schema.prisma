  // This is your Prisma schema file,
  // learn more about it in the docs: https://pris.ly/d/prisma-schema

  // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
  // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


  datasource db {
    provider = "postgresql" 
    url      = env("DATABASE_URL")
  }

  generator client {
    provider = "prisma-client-js"
  }

  model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    password  String
    name      String?
    createdAt DateTime @default(now())
    sessions  Session[] 
      folders  Folder[] // 1-n
  } 


  model Session {
    id          String   @id @default(cuid())
    sid         String   @unique
    data        String
    expiresAt   DateTime
    userId      Int?
    user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([sid], map: "idx_sid")
    @@index([expiresAt], map: "idx_expiresAt")
  }

  model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  files     File[]   // 1-n
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// model File {
//   id        Int      @id @default(autoincrement())
//   filename  String
//   path      String
//   folder    Folder   @relation(fields: [folderId], references: [id])
//   folderId  Int
//   createdAt DateTime @default(now())
// }

model File {
  id       Int      @id @default(autoincrement())
  filename String
  url      String   @default("default_value")
  folderId Int
  folder   Folder   @relation(fields: [folderId], references: [id])
  createdAt DateTime @default(now())
}