generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  createdAt DateTime  @default(now())
  folders   Folder[]
  sessions  Session[]
}

model Session {
  id        String   @id @default(cuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([sid], map: "idx_sid")
  @@index([expiresAt], map: "idx_expiresAt")
}

model Folder {
  id          Int          @id @default(autoincrement())
  name        String
  userId      Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  files       File[]
  user        User         @relation(fields: [userId], references: [id])
  sharedLinks SharedLink[]
}

model File {
  id        Int      @id @default(autoincrement())
  filename  String
  folderId  Int
  createdAt DateTime @default(now())
  url       String   @default("default_value")
  folder    Folder   @relation(fields: [folderId], references: [id])
}

model SharedLink {
  id        Int      @id @default(autoincrement())
  token     String   @unique @default(uuid())
  folderId  Int
  expiresAt DateTime
  createdAt DateTime @default(now())
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
}
